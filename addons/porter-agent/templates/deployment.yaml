apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  annotations:
    porter.run/agent-major-version: "v3"
  name: porter-agent-controller-manager
  namespace: porter-agent-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - image: "{{ .Values.agent.image }}"
        imagePullPolicy: Always
        envFrom:
        - configMapRef:
            name: porter-agent-config
        ports:
        - containerPort: 10001
          name: http
        volumeMounts:
        - name: sqlite-volume
          mountPath: /porter/sqlite
        name: manager
        livenessProbe:
          httpGet:
            path: /livez
            port: 10001
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 10001
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          requests:
            cpu: {{ .Values.resources.requests.cpu }}
            memory: {{ .Values.resources.requests.memory }}
          limits:
            cpu: {{ .Values.resources.limits.cpu }}
            memory: {{ .Values.resources.limits.memory }}
        securityContext:
          allowPrivilegeEscalation: false
      {{- if .Values.agent.privateRegistry.enabled }}
      imagePullSecrets:
        - name: "{{ .Values.agent.privateRegistry.secret }}"
      {{- end }}
      serviceAccountName: porter-agent-controller-manager
      terminationGracePeriodSeconds: 10
      {{- if gt (len .Values.nodeSelector) 0}}
      nodeSelector:
        {{- range $k, $v := .Values.nodeSelector }}
        {{ $k }}: {{ $v }}
        {{- end }}
      {{- end }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      volumes:
      - name: sqlite-volume
        persistentVolumeClaim:
          claimName: "{{ .Release.Name }}-sqlite-pvc"
